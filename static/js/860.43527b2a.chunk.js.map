{"version":3,"file":"static/js/860.43527b2a.chunk.js","mappings":"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","sources":["Components/auth/Forms/Form.js","Components/auth/Inputs/Input.js","Components/auth/Tables/Rows/DrpBtns/DrpBtn.js","Components/auth/Tables/Rows/Row.js","Components/auth/Tables/Rows/Tooltips/Tooltip.js","Components/auth/Tables/Table.js","Reducer/QuestionReducer.js","Components/user_panel/Exams/Questions.js","Contexts/PanelContext.js"],"sourcesContent":["import React from 'react'\r\nimport \"./Form.css\"\r\n\r\nexport default function Form(props) {\r\n  return (\r\n    <form className=\"FormContent\" onSubmit={props.onSubmitForm}>\r\n      <p className=\"titleForm\">{props.title}</p>\r\n      <div className=\"intsForm\">\r\n        {props.children}\r\n      </div>\r\n      <div className=\"buttonOptions\">\r\n        <button type='submit' className={`${props.loading ? 'loading' : ''}`}>\r\n          {\r\n            props.loading\r\n              ?\r\n              <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" viewBox=\"25 25 50 50\">\r\n\r\n                <circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke=\"#fff\" opacity=\"0.3\" strokeWidth=\"6\" strokeLinecap=\"round\" strokeDashoffset=\"0\" strokeDasharray=\"200, 300\">\r\n\r\n                </circle>\r\n                <circle className=\"stroke-current text-gray-500\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke=\"#fff\" strokeWidth=\"6\" strokeLinecap=\"round\" strokeDashoffset=\"0\" strokeDasharray=\"100, 200\">\r\n                  <animateTransform attributeName=\"transform\" attributeType=\"XML\" type=\"rotate\" from=\"0 50 50\" to=\"360 50 50\" dur=\"2.5s\" repeatCount=\"indefinite\"></animateTransform>\r\n                  <animate attributeName=\"stroke-dashoffset\" values=\"0;-30;-124\" dur=\"1.25s\" repeatCount=\"indefinite\"></animate>\r\n                  <animate attributeName=\"stroke-dasharray\" values=\"0,200;110,200;110,200\" dur=\"1.25s\" repeatCount=\"indefinite\"></animate>\r\n                </circle>\r\n              </svg>\r\n              : props.btnText ? props.btnText : 'ثبت اطلاعات'\r\n          }\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n","import React, { Fragment, useState } from 'react'\r\nimport './Input.css'\r\n\r\nexport default function Input(props) {\r\n\r\n    let [intType , setIntType] = useState('password')\r\n\r\n    function SetIntTypeFun() {\r\n        setIntType(prev => prev == 'password' ? 'text' : 'password')\r\n    }\r\n\r\n    function handleInputEvent(e) {\r\n        if(props.number) {\r\n            e.target.value = e.target.value.replace(/[^0-9.]/g, '').replace(/(\\..*?)\\..*/g, '$1');\r\n        }\r\n    }\r\n\r\n    function NumberIntHandler(e) {\r\n        if(props.phoneMode) {\r\n            if(e.target.value.length >= 11) {\r\n                e.preventDefault()\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`Int-box${props.classNameText ? ' ' + props.classNameText : '' }`}>\r\n            <label className='int-label'>{props.label}</label>\r\n            <div className=\"int-section\">\r\n                <input type={props.type ? props.type != 'password' ? props.type : intType : 'text'} className={props.type == 'password' ? 'padding-left' : ''} placeholder={props.placeHolder ? props.placeHolder : `لطفا ${props.label} خود را وارد کنید ...`} value={props.value} onChange={props.onChageEvent} onInput={handleInputEvent} onKeyPress={NumberIntHandler} />\r\n                {\r\n                    props.type == 'password' &&\r\n                    <div className=\"iconEye\" onClick={SetIntTypeFun}>\r\n                        {\r\n                            intType != 'password' && <svg  viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M15.1642 12.0521C15.1642 13.7981 13.7482 15.2141 12.0022 15.2141C10.2562 15.2141 8.84021 13.7981 8.84021 12.0521C8.84021 10.3051 10.2562 8.89014 12.0022 8.89014C13.7482 8.89014 15.1642 10.3051 15.1642 12.0521Z\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M2.75024 12.0521C2.75024 15.3321 6.89224 19.3541 12.0022 19.3541C17.1112 19.3541 21.2542 15.3351 21.2542 12.0521C21.2542 8.76912 17.1112 4.75012 12.0022 4.75012C6.89224 4.75012 2.75024 8.77212 2.75024 12.0521Z\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                            </svg>\r\n                        }\r\n\r\n                        {\r\n                            intType == 'password' && <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path d=\"M6.42 17.7297C4.19 16.2697 2.75 14.0697 2.75 12.1397C2.75 8.85972 6.89 4.83972 12 4.83972C14.09 4.83972 16.03 5.50972 17.59 6.54972\"  strokeWidth=\"1.5\"  strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                            <path d=\"M19.8498 8.61023C20.7408 9.74023 21.2598 10.9902 21.2598 12.1402C21.2598 15.4202 17.1098 19.4402 11.9998 19.4402C11.0898 19.4402 10.2008 19.3102 9.36975 19.0802\"  strokeWidth=\"1.5\"  strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                            <path d=\"M9.76572 14.3669C9.17072 13.7779 8.83772 12.9749 8.84072 12.1379C8.83672 10.3929 10.2487 8.97493 11.9947 8.97193C12.8347 8.96993 13.6407 9.30293 14.2347 9.89693\"  strokeWidth=\"1.5\"  strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                            <path d=\"M15.1095 12.6991C14.8755 13.9911 13.8645 15.0041 12.5725 15.2411\"  strokeWidth=\"1.5\"  strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                            <path d=\"M19.8917 4.24988L4.11768 20.0239\"  strokeWidth=\"1.5\"  strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                            </svg>\r\n                        }\r\n                        \r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './DrpBtn.css'\r\n\r\nexport default function DrpBtn(props) {\r\n  return (\r\n    <Fragment>\r\n        {\r\n            props.link \r\n            ? <Link to={props.link} className={`DrpBtn${props.theme ? ' ' + props.theme : ''}`}>{props.title}</Link>\r\n            : <div className={`DrpBtn${props.theme ? ' ' + props.theme : ''}`} onClick={props.onClickEvent}>{props.title}</div>\r\n\r\n        }\r\n    </Fragment>\r\n    \r\n  )\r\n}\r\n","import React, { Fragment, useEffect, useRef, useState } from 'react'\r\nimport './Row.css'\r\n\r\nexport default function Row(props) {\r\n\r\n    let [Height, setHeight] = useState(0)\r\n    let [Width, setWidth] = useState(0)\r\n    let [isOpen, setIsOpen] = useState(false)\r\n    const ref = useRef(null)\r\n\r\n    useEffect(() => {\r\n        if(ref.current) {\r\n            setHeight(ref.current.clientHeight)\r\n            setWidth(ref.current.clientWidth)\r\n        }\r\n       \r\n    })\r\n\r\n    function toggleDrp() {\r\n        setIsOpen(prev => !prev)\r\n    }\r\n\r\n    return (\r\n        <div className=\"RowTable\">\r\n            {props.children}\r\n            <div className=\"RowBox\" style={{ width: `calc(100% / ${props.operationCol})` }}>\r\n                {\r\n                    props.loading\r\n                        ?\r\n                        <svg className='loading-row' version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" viewBox=\"25 25 50 50\">\r\n\r\n                            <circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke=\"var(--title)\" opacity=\"0.3\" strokeWidth=\"6\" strokeLinecap=\"round\" strokeDashoffset=\"0\" strokeDasharray=\"200, 300\">\r\n\r\n                            </circle>\r\n                            <circle className=\"stroke-current text-gray-500\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke=\"var(--title)\" strokeWidth=\"6\" strokeLinecap=\"round\" strokeDashoffset=\"0\" strokeDasharray=\"100, 200\">\r\n                                <animateTransform attributeName=\"transform\" attributeType=\"XML\" type=\"rotate\" from=\"0 50 50\" to=\"360 50 50\" dur=\"2.5s\" repeatCount=\"indefinite\"></animateTransform>\r\n                                <animate attributeName=\"stroke-dashoffset\" values=\"0;-30;-124\" dur=\"1.25s\" repeatCount=\"indefinite\"></animate>\r\n                                <animate attributeName=\"stroke-dasharray\" values=\"0,200;110,200;110,200\" dur=\"1.25s\" repeatCount=\"indefinite\"></animate>\r\n                            </circle>\r\n                        </svg>\r\n                        :\r\n                        <Fragment>\r\n                            <div className={`operiationBtn${isOpen ? ' active' : ''}`} onClick={toggleDrp}>\r\n                                <svg viewBox=\"0 0 25 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M5.30396 6.30405C4.08098 7.52702 3.5 9.57319 3.5 13.0001C3.5 16.427 4.08098 18.4732 5.30396 19.6961C6.52693 20.9191 8.5731 21.5001 12 21.5001C15.4269 21.5001 17.4731 20.9191 18.696 19.6961C19.919 18.4732 20.5 16.427 20.5 13.0001C20.5 9.57319 19.919 7.52702 18.696 6.30405C17.4731 5.08107 15.4269 4.50009 12 4.50009C8.5731 4.50009 6.52693 5.08107 5.30396 6.30405ZM4.24329 5.24339C5.91107 3.57561 8.4899 3.00009 12 3.00009C15.5101 3.00009 18.0889 3.57561 19.7567 5.24339C21.4245 6.91116 22 9.48999 22 13.0001C22 16.5102 21.4245 19.089 19.7567 20.7568C18.0889 22.4246 15.5101 23.0001 12 23.0001C8.4899 23.0001 5.91107 22.4246 4.24329 20.7568C2.57552 19.089 2 16.5102 2 13.0001C2 9.48999 2.57552 6.91116 4.24329 5.24339Z\" />\r\n                                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M14.9934 13C14.9934 12.4477 15.4411 12 15.9934 12H16.0024C16.5547 12 17.0024 12.4477 17.0024 13C17.0024 13.5523 16.5547 14 16.0024 14H15.9934C15.4411 14 14.9934 13.5523 14.9934 13Z\" />\r\n                                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.9944 13C10.9944 12.4477 11.4421 12 11.9944 12H12.0034C12.5557 12 13.0034 12.4477 13.0034 13C13.0034 13.5523 12.5557 14 12.0034 14H11.9944C11.4421 14 10.9944 13.5523 10.9944 13Z\" />\r\n                                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.99561 13C6.99561 12.4477 7.44332 12 7.99561 12H8.00461C8.55689 12 9.00461 12.4477 9.00461 13C9.00461 13.5523 8.55689 14 8.00461 14H7.99561C7.44332 14 6.99561 13.5523 6.99561 13Z\" />\r\n                                </svg>\r\n                                <div className={`drpRow${!isOpen ? ' close' : ''}`} style={{ height: Height, width: Width }}>\r\n                                    <div className=\"drpContentRow\" ref={ref}>\r\n                                        {\r\n                                            props.btns.map(item => (item))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={`overlayDrpRow${isOpen ? ' active' : ''}`} onClick={toggleDrp}></div>\r\n                        </Fragment>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Tooltip.css'\r\n\r\nexport default function Tooltip(props) {\r\n  return (\r\n    <div className={`Tooltip${props.customClass ? ' ' + props.customClass : ''}`}>{props.title}</div>\r\n  )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport './Table.css'\r\n\r\nexport default function Table(props) {\r\n    return (\r\n        <div className=\"TableContent\">\r\n            <p className=\"titleTable\">{props.title}</p>\r\n            <div className=\"TableAll\">\r\n\r\n                <div className=\"thCon\">\r\n                    {\r\n                        props.thData.map(th => (\r\n                            <div className=\"thBox\" key={th.id} style={{ width: `calc(100% / ${th.cloNum})`, justifyContent: th.position }}>{th.title}</div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"rowContent\">\r\n                    {\r\n                        props.isLoading && <div className=\"loadingTable\">\r\n                            <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" viewBox=\"25 25 50 50\">\r\n\r\n                                <circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke=\"var(--title)\" opacity=\"0.3\" strokeWidth=\"6\" strokeLinecap=\"round\" strokeDashoffset=\"0\" strokeDasharray=\"200, 300\">\r\n\r\n                                </circle>\r\n                                <circle className=\"stroke-current text-gray-500\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke=\"var(--title)\" strokeWidth=\"6\" strokeLinecap=\"round\" strokeDashoffset=\"0\" strokeDasharray=\"100, 200\">\r\n                                    <animateTransform attributeName=\"transform\" attributeType=\"XML\" type=\"rotate\" from=\"0 50 50\" to=\"360 50 50\" dur=\"2.5s\" repeatCount=\"indefinite\"></animateTransform>\r\n                                    <animate attributeName=\"stroke-dashoffset\" values=\"0;-30;-124\" dur=\"1.25s\" repeatCount=\"indefinite\"></animate>\r\n                                    <animate attributeName=\"stroke-dasharray\" values=\"0,200;110,200;110,200\" dur=\"1.25s\" repeatCount=\"indefinite\"></animate>\r\n                                </circle>\r\n                            </svg>\r\n                        </div>\r\n                    }\r\n                    {\r\n                        (props.isLoading == false && props.children.length == 0) ? <div className=\"emptyTable\">موردی یافت نشد :(</div> : props.isLoading == false ? props.children : null\r\n                    }\r\n        \r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","function QuestionReducer(state , action) {\r\n\r\n    let {type} = action\r\n\r\n    if(type == 'setQuestionData') {\r\n        return action.data\r\n    }\r\n    else if(type == 'add') {\r\n        return addData(state,action)\r\n    }\r\n    else if(type == 'delete') {\r\n        return deleteData(state,action)\r\n    }\r\n}\r\n\r\nfunction addData(state,action) {\r\n    \r\n    return [\r\n        ...state,\r\n        action.data\r\n    ]\r\n}\r\n\r\nfunction deleteData(state , action) {\r\n\r\n    return state.filter(item => item.id != action.data)\r\n}\r\n\r\nexport default QuestionReducer","import React, { Fragment, useContext, useEffect, useReducer, useState } from 'react'\r\nimport { useLoadingContext } from 'react-router-loading';\r\nimport Input from '../../auth/Inputs/Input';\r\nimport PanelContext from '../../../Contexts/PanelContext';\r\nimport Form from '../../auth/Forms/Form';\r\nimport './Exam.css'\r\nimport Alert from '../../../Tools/Js/Alert';\r\nimport AppContext from '../../../Contexts/AppContext';\r\nimport { useParams } from 'react-router-dom';\r\nimport QuestionReducer from './../../../Reducer/QuestionReducer'\r\nimport Row from '../../auth/Tables/Rows/Row';\r\nimport DrpBtn from '../../auth/Tables/Rows/DrpBtns/DrpBtn';\r\nimport Tooltip from '../../auth/Tables/Rows/Tooltips/Tooltip';\r\nimport Table from '../../auth/Tables/Table';\r\n\r\nexport default function Questions() {\r\n\r\n    const loadingContext = useLoadingContext();\r\n    const panelContext = useContext(PanelContext)\r\n    const appContext = useContext(AppContext)\r\n\r\n    const param = useParams()\r\n\r\n    useEffect(() => {\r\n        loadingContext.done();\r\n        panelContext.setTitlePanel('ثبت پرسش های <span>آزمون</span>')\r\n    }, [])\r\n\r\n\r\n    let [FormDataInts, setFormData] = useState({\r\n        title: ''\r\n    })\r\n    let [FormLoading, setFormLoading] = useState(false)\r\n\r\n    let [Questions, DispatchQuetions] = useReducer(QuestionReducer, [])\r\n    let [TableLoading, setTableLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setTableLoading(true)\r\n\r\n        appContext.HttpRequest.get(`exam/questions/${param.quiz_id}/get`).then(res => {\r\n            DispatchQuetions({ type: 'setQuestionData', data: res.data })\r\n            setTableLoading(false)\r\n        })\r\n            .catch(err => {\r\n                if (err.message == 'Request failed with status code 305') {\r\n                    Alert('error', 'خطایی در احراز هویت اطلاعات شما بوجود اومد')\r\n                    appContext.logOut()\r\n                }\r\n                else if (err.message != 'Request failed with status code 305' && err.message != 'Request failed with status code 302') {\r\n                    Alert('error', 'با عرض پوزش , خطایی در سیتم بوجود آومد')\r\n                }\r\n                else {\r\n                    Alert('error', err.response.data)\r\n                }\r\n\r\n                setTableLoading(false)\r\n            })\r\n\r\n    }, [])\r\n\r\n    function InserData(e) {\r\n\r\n        e.preventDefault()\r\n\r\n        if (FormDataInts.title != '') {\r\n\r\n            setFormLoading(true)\r\n\r\n            appContext.HttpRequest.post(`exam/questions/${param.quiz_id}/add`, FormDataInts)\r\n                .then(res => {\r\n                    Alert('success', 'پرسش با موفقیت ثبت شد')\r\n                    setFormData({\r\n                        title: ''\r\n                    })\r\n                    DispatchQuetions({ type: 'add', data: res.data })\r\n                    setFormLoading(false)\r\n                })\r\n                .catch(err => {\r\n                    if (err.message == 'Request failed with status code 305') {\r\n                        Alert('error', 'خطایی در احراز هویت اطلاعات شما بوجود اومد')\r\n                        appContext.logOut()\r\n                    }\r\n                    else if (err.message != 'Request failed with status code 305' && err.message != 'Request failed with status code 302') {\r\n                        Alert('error', 'با عرض پوزش , خطایی در سیتم بوجود آومد')\r\n                    }\r\n                    else {\r\n                        Alert('error', err.response.data)\r\n                    }\r\n\r\n                    setFormLoading(false)\r\n\r\n                })\r\n        }\r\n        else {\r\n            Alert('error', 'لطفا اطلاعات خواسته شده را وارد کنید')\r\n        }\r\n\r\n    }\r\n\r\n    let [DeleteLoading, setDeleteLoading] = useState(false)\r\n\r\n    function DeleteControl(id) {\r\n\r\n        setDeleteLoading(id)\r\n\r\n        appContext.HttpRequest.delete(`exam/questions/delete/${id}`)\r\n            .then(res => {\r\n                DispatchQuetions({ type: 'delete', data: id })\r\n                setDeleteLoading(false)\r\n                Alert('success', 'عملیات با موفقیت انجام شد')\r\n            })\r\n            .catch(err => {\r\n                if (err.message == 'Request failed with status code 305') {\r\n                    Alert('error', 'خطایی در احراز هویت اطلاعات شما بوجود اومد')\r\n                    appContext.logOut()\r\n                }\r\n                else if (err.message != 'Request failed with status code 305' && err.message != 'Request failed with status code 302') {\r\n                    Alert('error', 'با عرض پوزش , خطایی در سیتم بوجود آومد')\r\n                }\r\n                else {\r\n                    Alert('error', err.response.data)\r\n                }\r\n                setDeleteLoading(false)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"SectionContainer\">\r\n                <Form\r\n                    title=\"فرم ثبت پرسش های آزمون\"\r\n                    loading={FormLoading}\r\n                    onSubmitForm={InserData}\r\n                    btnText=\"ثبت اطلاعات آزمون\"\r\n                >\r\n\r\n                    <Input\r\n                        classNameText=\"num-1\"\r\n                        label=\"عنوان پرسش\"\r\n                        value={FormDataInts.title}\r\n                        onChageEvent={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\r\n                    />\r\n\r\n                </Form>\r\n            </div>\r\n            <div className=\"SectionContainer\">\r\n                <Table\r\n                    title=\"لیست پرسش ها\"\r\n                    isLoading={TableLoading}\r\n                    thData={[\r\n                        { id: 1, title: 'ردیف', cloNum: 8, position: 'center' },\r\n                        { id: 2, title: 'عنوان', cloNum: 3, position: 'flex-start' },\r\n                        { id: 3, title: 'گزینه ها', cloNum: 7, position: 'center' },\r\n                        { id: 4, title: 'دارای گزینه درست', cloNum: 5, position: 'center' },\r\n                        { id: 5, title: 'عملیات', cloNum: 8, position: 'center' },\r\n                    ]}\r\n                >\r\n                    {\r\n                        Questions.map((Question, index) => (\r\n                            <Row\r\n                                key={Question.id + 'Question'}\r\n                                operationCol={8}\r\n                                loading={DeleteLoading == Question.id ? true : false}\r\n                                btns={[\r\n                                    <DrpBtn key=\"row-1\" title=\"ویرایش\" theme=\"blue\" link={`/React-quizApp/panel/exam/${Question.id}/Editquestions`} />,\r\n                                    <DrpBtn key=\"row-2\" title=\"ثبت گزینه ها\" theme=\"green\" link={`/React-quizApp/panel/exam/${Question.id}/answers`} />,\r\n                                    <DrpBtn key=\"row-3\" title=\"حذف\" theme=\"red\" onClickEvent={() => DeleteControl(Question.id)} />\r\n                                ]}\r\n                            >\r\n                                <div className=\"RowBox\" style={{ width: `calc(100% / 8)` }}>{index + 1}</div>\r\n                                <div className=\"RowBox rightArrow leftArrow\" style={{ width: `calc(100% / 3)`, justifyContent: 'flex-start', gap: 10 }}>\r\n                                    <span className='text-span2'>{Question.title}</span>\r\n                                    <Tooltip title={Question.title} />\r\n                                </div>\r\n                                <div className=\"RowBox leftArrow\" style={{ width: `calc(100% / 7)` }}>{Question.answers_num} گزینه</div>\r\n                                <div className=\"RowBox leftArrow\" style={{ width: `calc(100% / 5)` }}>{Question.hasnswer ? <span className='tag success'>گزینه درست ثبت شده</span> : <span className='tag error'>گزینه درست ثبت نشده</span>}</div>\r\n\r\n                            </Row>\r\n                        ))\r\n                    }\r\n\r\n                </Table>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","\r\nimport React, { useContext } from \"react\";\r\n\r\nconst PanelContext = React.createContext({})\r\n\r\nexport default PanelContext"],"names":["Form","props","_jsxs","className","onSubmit","onSubmitForm","children","_jsx","title","type","concat","loading","version","xmlns","xmlnsXlink","viewBox","cx","cy","r","fill","stroke","opacity","strokeWidth","strokeLinecap","strokeDashoffset","strokeDasharray","attributeName","attributeType","from","to","dur","repeatCount","values","btnText","Input","intType","setIntType","useState","classNameText","label","placeholder","placeHolder","value","onChange","onChageEvent","onInput","e","number","target","replace","onKeyPress","phoneMode","length","preventDefault","onClick","prev","fillRule","clipRule","d","strokeLinejoin","DrpBtn","Fragment","link","Link","theme","onClickEvent","Row","Height","setHeight","Width","setWidth","isOpen","setIsOpen","ref","useRef","toggleDrp","useEffect","current","clientHeight","clientWidth","style","width","operationCol","height","btns","map","item","Tooltip","customClass","Table","thData","th","cloNum","justifyContent","position","id","isLoading","state","action","data","addData","filter","deleteData","Questions","loadingContext","useLoadingContext","panelContext","useContext","PanelContext","appContext","AppContext","param","useParams","done","setTitlePanel","FormDataInts","setFormData","FormLoading","setFormLoading","DispatchQuetions","useReducer","QuestionReducer","TableLoading","setTableLoading","HttpRequest","get","quiz_id","then","res","catch","err","message","Alert","logOut","response","DeleteLoading","setDeleteLoading","post","Question","index","DeleteControl","delete","gap","answers_num","hasnswer","React"],"sourceRoot":""}